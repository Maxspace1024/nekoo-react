
// const posts = [
//   {
//     postId: "9442-asdf",
//     userId: 1,
//     userName: "asdf", 
//     userAvatarPath: "https://nekoo-s3.s3.ap-northeast-1.amazonaws.com/cbb9848a-9514-49f5-8d10-0186aa9ce538.jpg",
//     privacy: 0,
//     content: '這是一個貼文的範例，展示了滾動效果...',
//     hashtags: ['馬路', '亂七八糟'],
//     assets: [
//       {
//         id: 'x', 
//         type: 0, //static
//         path: "cbb9848a-9514-49f5-8d10-0186aa9ce538.jpg"
//       }
//     ],
//     totalDanmakuCount: 1234,
//     createAt: '2023/08/23 21:32:00', 
//   },
// ]

// const chatRooms = [
//   {"chatroomId":7,"chatroomUuid":"d42edfd5-a850-4d29-9a46-59efa65a2277","chatroomName":"qwer","chatroomAvatarPath": "https://nekoo-s3.s3.ap-northeast-1.amazonaws.com/cbb9848a-9514-49f5-8d10-0186aa9ce538.jpg","lastContent":"晚安沒大腦","lastCreateAt":"2024-09-28T04:10:42.417Z"},
//   {"chatroomId":7,"chatroomUuid":"d42edfd5-a850-4d29-9a46-59efa65a2278","chatroomName":"qwer","chatroomAvatarPath": "https://nekoo-s3.s3.ap-northeast-1.amazonaws.com/cbb9848a-9514-49f5-8d10-0186aa9ce538.jpg","lastContent":"晚安沒大腦","lastCreateAt":"2024-09-28T04:10:42.417Z"}
// ]

//const chatLogs = [
//  { chatLogId: 1, chatroomId: "asdf", userAvatarPath: "https://nekoo-s3.s3.ap-northeast-1.amazonaws.com/cbb9848a-9514-49f5-8d10-0186aa9ce538.jpg", content: "你好！", sender: "other", createAt: "2024-09-28T04:10:42.417Z" },
//  { chatLogId: 2, chatroomId: "asdf", userAvatarPath: "https://nekoo-s3.s3.ap-northeast-1.amazonaws.com/cbb9848a-9514-49f5-8d10-0186aa9ce538.jpg", content: "嗨，最近如何？", sender: "self", createAt: "2024-09-28T04:11:42.417Z" },
//];

// const friendships = [
//   {
//     "friendshipId":null,
//     "senderUserId":null,
//     "senderUserName":null,
//     "senderUserAvatarPath":null,
//     "receiverUserId":2,
//     "receiverUserName":'qwer',
//     "receiverUserAvatarPath": "https://nekoo-s3.s3.ap-northeast-1.amazonaws.com/cbb9848a-9514-49f5-8d10-0186aa9ce538.jpg","lastContent":"晚安沒大腦","lastCreateAt":"2024-09-28T04:10:42.417Z",
//     "friendshipState":0,// (0:pending, 1:approve, 2:reject, 3:none)
//     "createAt":null,
//     "modifyAt":null
//   }
// ]


useEffect(() => {
    let playInterval = null;
    let dmkIndex = 0;

    const moveDmkFromBufferToDmkList = () => {
      let dmk;
      do {
        try {
          dmk = dmks[dmkIndex]
        } catch(e) {
          break
        }
        if (dmk && dmk.appearAt <= videoRef.current.currentTime) {
          dmkIndex++
          sendBarrage(dmk)
        } else {
          break
        }
      } while(dmk && dmk.appearAt <= videoRef.current.currentTime)
    }

    axiox.post('/api/v1/danmaku/log', {
      assetId: asset.id
    })
    .then(res => {
      const data = res.data
      if (res.status && data.data) {
        setDmks(data.data)
      }
    })
    .catch(e => {
      console.error(e)
    })

    videoRef.current.addEventListener('play', () => {
      console.log('play')
    })
    videoRef.current.addEventListener('playing', () => {
      if (playInterval === null) {
        dmkIndex = 0;
        for(const dmk of dmks) {
          if (dmk.appearAt < videoRef.current.currentTime) {
            dmkIndex++
          } else {
            break
          }
        }
        playInterval = setInterval(moveDmkFromBufferToDmkList, 50)
      }
      console.log('playing')
    })
    videoRef.current.addEventListener('pause', () => {
      console.log('pause')
    })

    // videoRef.current.addEventListener('timeupdate', () => {
    //   console.log('timeupdate')
    // })

    videoRef.current.addEventListener('seeked', () => {
      console.log('seeked')
    })
    videoRef.current.addEventListener('seeking', () => {
      if (playInterval !== null) {
        clearInterval(playInterval)
        playInterval = null
      }
      console.log('seeking')
    })
    videoRef.current.addEventListener('ratechange', () => {
      console.log('ratechange')
    })
    videoRef.current.addEventListener('durationchagne', () => {
      console.log('durationchagne')
    })
    videoRef.current.addEventListener('volumnechange', () => {
      console.log('volumnechange')
    })
    // return () => clearInterval(interval);
  }, []);